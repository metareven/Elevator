# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _comedi
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


cr_pack = _comedi.cr_pack
cr_pack_flags = _comedi.cr_pack_flags
cr_chan = _comedi.cr_chan
cr_range = _comedi.cr_range
cr_aref = _comedi.cr_aref
class chanlist(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, chanlist, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, chanlist, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _comedi.new_chanlist(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_chanlist
    __del__ = lambda self : None;
    def __getitem__(*args): return _comedi.chanlist___getitem__(*args)
    def __setitem__(*args): return _comedi.chanlist___setitem__(*args)
    def cast(*args): return _comedi.chanlist_cast(*args)
    __swig_getmethods__["frompointer"] = lambda x: _comedi.chanlist_frompointer
    if _newclass:frompointer = staticmethod(_comedi.chanlist_frompointer)
chanlist_swigregister = _comedi.chanlist_swigregister
chanlist_swigregister(chanlist)
chanlist_frompointer = _comedi.chanlist_frompointer

COMEDI_MAJOR = _comedi.COMEDI_MAJOR
COMEDI_NDEVICES = _comedi.COMEDI_NDEVICES
COMEDI_NDEVCONFOPTS = _comedi.COMEDI_NDEVCONFOPTS
COMEDI_DEVCONF_AUX_DATA3_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA3_LENGTH
COMEDI_DEVCONF_AUX_DATA2_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA2_LENGTH
COMEDI_DEVCONF_AUX_DATA1_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA1_LENGTH
COMEDI_DEVCONF_AUX_DATA0_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA0_LENGTH
COMEDI_DEVCONF_AUX_DATA_HI = _comedi.COMEDI_DEVCONF_AUX_DATA_HI
COMEDI_DEVCONF_AUX_DATA_LO = _comedi.COMEDI_DEVCONF_AUX_DATA_LO
COMEDI_DEVCONF_AUX_DATA_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA_LENGTH
COMEDI_NAMELEN = _comedi.COMEDI_NAMELEN
CR_FLAGS_MASK = _comedi.CR_FLAGS_MASK
CR_ALT_FILTER = _comedi.CR_ALT_FILTER
CR_DITHER = _comedi.CR_DITHER
CR_DEGLITCH = _comedi.CR_DEGLITCH
CR_ALT_SOURCE = _comedi.CR_ALT_SOURCE
CR_EDGE = _comedi.CR_EDGE
CR_INVERT = _comedi.CR_INVERT
AREF_GROUND = _comedi.AREF_GROUND
AREF_COMMON = _comedi.AREF_COMMON
AREF_DIFF = _comedi.AREF_DIFF
AREF_OTHER = _comedi.AREF_OTHER
GPCT_RESET = _comedi.GPCT_RESET
GPCT_SET_SOURCE = _comedi.GPCT_SET_SOURCE
GPCT_SET_GATE = _comedi.GPCT_SET_GATE
GPCT_SET_DIRECTION = _comedi.GPCT_SET_DIRECTION
GPCT_SET_OPERATION = _comedi.GPCT_SET_OPERATION
GPCT_ARM = _comedi.GPCT_ARM
GPCT_DISARM = _comedi.GPCT_DISARM
GPCT_GET_INT_CLK_FRQ = _comedi.GPCT_GET_INT_CLK_FRQ
GPCT_INT_CLOCK = _comedi.GPCT_INT_CLOCK
GPCT_EXT_PIN = _comedi.GPCT_EXT_PIN
GPCT_NO_GATE = _comedi.GPCT_NO_GATE
GPCT_UP = _comedi.GPCT_UP
GPCT_DOWN = _comedi.GPCT_DOWN
GPCT_HWUD = _comedi.GPCT_HWUD
GPCT_SIMPLE_EVENT = _comedi.GPCT_SIMPLE_EVENT
GPCT_SINGLE_PERIOD = _comedi.GPCT_SINGLE_PERIOD
GPCT_SINGLE_PW = _comedi.GPCT_SINGLE_PW
GPCT_CONT_PULSE_OUT = _comedi.GPCT_CONT_PULSE_OUT
GPCT_SINGLE_PULSE_OUT = _comedi.GPCT_SINGLE_PULSE_OUT
INSN_MASK_WRITE = _comedi.INSN_MASK_WRITE
INSN_MASK_READ = _comedi.INSN_MASK_READ
INSN_MASK_SPECIAL = _comedi.INSN_MASK_SPECIAL
INSN_READ = _comedi.INSN_READ
INSN_WRITE = _comedi.INSN_WRITE
INSN_BITS = _comedi.INSN_BITS
INSN_CONFIG = _comedi.INSN_CONFIG
INSN_GTOD = _comedi.INSN_GTOD
INSN_WAIT = _comedi.INSN_WAIT
INSN_INTTRIG = _comedi.INSN_INTTRIG
TRIG_BOGUS = _comedi.TRIG_BOGUS
TRIG_DITHER = _comedi.TRIG_DITHER
TRIG_DEGLITCH = _comedi.TRIG_DEGLITCH
TRIG_CONFIG = _comedi.TRIG_CONFIG
TRIG_WAKE_EOS = _comedi.TRIG_WAKE_EOS
CMDF_PRIORITY = _comedi.CMDF_PRIORITY
TRIG_RT = _comedi.TRIG_RT
CMDF_WRITE = _comedi.CMDF_WRITE
TRIG_WRITE = _comedi.TRIG_WRITE
CMDF_RAWDATA = _comedi.CMDF_RAWDATA
COMEDI_EV_START = _comedi.COMEDI_EV_START
COMEDI_EV_SCAN_BEGIN = _comedi.COMEDI_EV_SCAN_BEGIN
COMEDI_EV_CONVERT = _comedi.COMEDI_EV_CONVERT
COMEDI_EV_SCAN_END = _comedi.COMEDI_EV_SCAN_END
COMEDI_EV_STOP = _comedi.COMEDI_EV_STOP
TRIG_ROUND_MASK = _comedi.TRIG_ROUND_MASK
TRIG_ROUND_NEAREST = _comedi.TRIG_ROUND_NEAREST
TRIG_ROUND_DOWN = _comedi.TRIG_ROUND_DOWN
TRIG_ROUND_UP = _comedi.TRIG_ROUND_UP
TRIG_ROUND_UP_NEXT = _comedi.TRIG_ROUND_UP_NEXT
TRIG_ANY = _comedi.TRIG_ANY
TRIG_INVALID = _comedi.TRIG_INVALID
TRIG_NONE = _comedi.TRIG_NONE
TRIG_NOW = _comedi.TRIG_NOW
TRIG_FOLLOW = _comedi.TRIG_FOLLOW
TRIG_TIME = _comedi.TRIG_TIME
TRIG_TIMER = _comedi.TRIG_TIMER
TRIG_COUNT = _comedi.TRIG_COUNT
TRIG_EXT = _comedi.TRIG_EXT
TRIG_INT = _comedi.TRIG_INT
TRIG_OTHER = _comedi.TRIG_OTHER
SDF_BUSY = _comedi.SDF_BUSY
SDF_BUSY_OWNER = _comedi.SDF_BUSY_OWNER
SDF_LOCKED = _comedi.SDF_LOCKED
SDF_LOCK_OWNER = _comedi.SDF_LOCK_OWNER
SDF_MAXDATA = _comedi.SDF_MAXDATA
SDF_FLAGS = _comedi.SDF_FLAGS
SDF_RANGETYPE = _comedi.SDF_RANGETYPE
SDF_MODE0 = _comedi.SDF_MODE0
SDF_MODE1 = _comedi.SDF_MODE1
SDF_MODE2 = _comedi.SDF_MODE2
SDF_MODE3 = _comedi.SDF_MODE3
SDF_MODE4 = _comedi.SDF_MODE4
SDF_CMD = _comedi.SDF_CMD
SDF_SOFT_CALIBRATED = _comedi.SDF_SOFT_CALIBRATED
SDF_CMD_WRITE = _comedi.SDF_CMD_WRITE
SDF_CMD_READ = _comedi.SDF_CMD_READ
SDF_READABLE = _comedi.SDF_READABLE
SDF_WRITABLE = _comedi.SDF_WRITABLE
SDF_WRITEABLE = _comedi.SDF_WRITEABLE
SDF_INTERNAL = _comedi.SDF_INTERNAL
SDF_RT = _comedi.SDF_RT
SDF_GROUND = _comedi.SDF_GROUND
SDF_COMMON = _comedi.SDF_COMMON
SDF_DIFF = _comedi.SDF_DIFF
SDF_OTHER = _comedi.SDF_OTHER
SDF_DITHER = _comedi.SDF_DITHER
SDF_DEGLITCH = _comedi.SDF_DEGLITCH
SDF_MMAP = _comedi.SDF_MMAP
SDF_RUNNING = _comedi.SDF_RUNNING
SDF_LSAMPL = _comedi.SDF_LSAMPL
SDF_PACKED = _comedi.SDF_PACKED
COMEDI_SUBD_UNUSED = _comedi.COMEDI_SUBD_UNUSED
COMEDI_SUBD_AI = _comedi.COMEDI_SUBD_AI
COMEDI_SUBD_AO = _comedi.COMEDI_SUBD_AO
COMEDI_SUBD_DI = _comedi.COMEDI_SUBD_DI
COMEDI_SUBD_DO = _comedi.COMEDI_SUBD_DO
COMEDI_SUBD_DIO = _comedi.COMEDI_SUBD_DIO
COMEDI_SUBD_COUNTER = _comedi.COMEDI_SUBD_COUNTER
COMEDI_SUBD_TIMER = _comedi.COMEDI_SUBD_TIMER
COMEDI_SUBD_MEMORY = _comedi.COMEDI_SUBD_MEMORY
COMEDI_SUBD_CALIB = _comedi.COMEDI_SUBD_CALIB
COMEDI_SUBD_PROC = _comedi.COMEDI_SUBD_PROC
COMEDI_SUBD_SERIAL = _comedi.COMEDI_SUBD_SERIAL
INSN_CONFIG_DIO_INPUT = _comedi.INSN_CONFIG_DIO_INPUT
INSN_CONFIG_DIO_OUTPUT = _comedi.INSN_CONFIG_DIO_OUTPUT
INSN_CONFIG_DIO_OPENDRAIN = _comedi.INSN_CONFIG_DIO_OPENDRAIN
INSN_CONFIG_ANALOG_TRIG = _comedi.INSN_CONFIG_ANALOG_TRIG
INSN_CONFIG_ALT_SOURCE = _comedi.INSN_CONFIG_ALT_SOURCE
INSN_CONFIG_DIGITAL_TRIG = _comedi.INSN_CONFIG_DIGITAL_TRIG
INSN_CONFIG_BLOCK_SIZE = _comedi.INSN_CONFIG_BLOCK_SIZE
INSN_CONFIG_TIMER_1 = _comedi.INSN_CONFIG_TIMER_1
INSN_CONFIG_FILTER = _comedi.INSN_CONFIG_FILTER
INSN_CONFIG_CHANGE_NOTIFY = _comedi.INSN_CONFIG_CHANGE_NOTIFY
INSN_CONFIG_SERIAL_CLOCK = _comedi.INSN_CONFIG_SERIAL_CLOCK
INSN_CONFIG_BIDIRECTIONAL_DATA = _comedi.INSN_CONFIG_BIDIRECTIONAL_DATA
INSN_CONFIG_DIO_QUERY = _comedi.INSN_CONFIG_DIO_QUERY
INSN_CONFIG_PWM_OUTPUT = _comedi.INSN_CONFIG_PWM_OUTPUT
INSN_CONFIG_GET_PWM_OUTPUT = _comedi.INSN_CONFIG_GET_PWM_OUTPUT
INSN_CONFIG_ARM = _comedi.INSN_CONFIG_ARM
INSN_CONFIG_DISARM = _comedi.INSN_CONFIG_DISARM
INSN_CONFIG_GET_COUNTER_STATUS = _comedi.INSN_CONFIG_GET_COUNTER_STATUS
INSN_CONFIG_RESET = _comedi.INSN_CONFIG_RESET
INSN_CONFIG_GPCT_SINGLE_PULSE_GENERATOR = _comedi.INSN_CONFIG_GPCT_SINGLE_PULSE_GENERATOR
INSN_CONFIG_GPCT_PULSE_TRAIN_GENERATOR = _comedi.INSN_CONFIG_GPCT_PULSE_TRAIN_GENERATOR
INSN_CONFIG_GPCT_QUADRATURE_ENCODER = _comedi.INSN_CONFIG_GPCT_QUADRATURE_ENCODER
INSN_CONFIG_SET_GATE_SRC = _comedi.INSN_CONFIG_SET_GATE_SRC
INSN_CONFIG_GET_GATE_SRC = _comedi.INSN_CONFIG_GET_GATE_SRC
INSN_CONFIG_SET_CLOCK_SRC = _comedi.INSN_CONFIG_SET_CLOCK_SRC
INSN_CONFIG_GET_CLOCK_SRC = _comedi.INSN_CONFIG_GET_CLOCK_SRC
INSN_CONFIG_SET_OTHER_SRC = _comedi.INSN_CONFIG_SET_OTHER_SRC
INSN_CONFIG_SET_COUNTER_MODE = _comedi.INSN_CONFIG_SET_COUNTER_MODE
INSN_CONFIG_8254_SET_MODE = _comedi.INSN_CONFIG_8254_SET_MODE
INSN_CONFIG_8254_READ_STATUS = _comedi.INSN_CONFIG_8254_READ_STATUS
INSN_CONFIG_SET_ROUTING = _comedi.INSN_CONFIG_SET_ROUTING
INSN_CONFIG_GET_ROUTING = _comedi.INSN_CONFIG_GET_ROUTING
COMEDI_INPUT = _comedi.COMEDI_INPUT
COMEDI_OUTPUT = _comedi.COMEDI_OUTPUT
COMEDI_OPENDRAIN = _comedi.COMEDI_OPENDRAIN
CIO = _comedi.CIO
class comedi_trig_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_trig_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_trig_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["subdev"] = _comedi.comedi_trig_struct_subdev_set
    __swig_getmethods__["subdev"] = _comedi.comedi_trig_struct_subdev_get
    if _newclass:subdev = _swig_property(_comedi.comedi_trig_struct_subdev_get, _comedi.comedi_trig_struct_subdev_set)
    __swig_setmethods__["mode"] = _comedi.comedi_trig_struct_mode_set
    __swig_getmethods__["mode"] = _comedi.comedi_trig_struct_mode_get
    if _newclass:mode = _swig_property(_comedi.comedi_trig_struct_mode_get, _comedi.comedi_trig_struct_mode_set)
    __swig_setmethods__["flags"] = _comedi.comedi_trig_struct_flags_set
    __swig_getmethods__["flags"] = _comedi.comedi_trig_struct_flags_get
    if _newclass:flags = _swig_property(_comedi.comedi_trig_struct_flags_get, _comedi.comedi_trig_struct_flags_set)
    __swig_setmethods__["n_chan"] = _comedi.comedi_trig_struct_n_chan_set
    __swig_getmethods__["n_chan"] = _comedi.comedi_trig_struct_n_chan_get
    if _newclass:n_chan = _swig_property(_comedi.comedi_trig_struct_n_chan_get, _comedi.comedi_trig_struct_n_chan_set)
    __swig_setmethods__["chanlist"] = _comedi.comedi_trig_struct_chanlist_set
    __swig_getmethods__["chanlist"] = _comedi.comedi_trig_struct_chanlist_get
    if _newclass:chanlist = _swig_property(_comedi.comedi_trig_struct_chanlist_get, _comedi.comedi_trig_struct_chanlist_set)
    __swig_setmethods__["data"] = _comedi.comedi_trig_struct_data_set
    __swig_getmethods__["data"] = _comedi.comedi_trig_struct_data_get
    if _newclass:data = _swig_property(_comedi.comedi_trig_struct_data_get, _comedi.comedi_trig_struct_data_set)
    __swig_setmethods__["n"] = _comedi.comedi_trig_struct_n_set
    __swig_getmethods__["n"] = _comedi.comedi_trig_struct_n_get
    if _newclass:n = _swig_property(_comedi.comedi_trig_struct_n_get, _comedi.comedi_trig_struct_n_set)
    __swig_setmethods__["trigsrc"] = _comedi.comedi_trig_struct_trigsrc_set
    __swig_getmethods__["trigsrc"] = _comedi.comedi_trig_struct_trigsrc_get
    if _newclass:trigsrc = _swig_property(_comedi.comedi_trig_struct_trigsrc_get, _comedi.comedi_trig_struct_trigsrc_set)
    __swig_setmethods__["trigvar"] = _comedi.comedi_trig_struct_trigvar_set
    __swig_getmethods__["trigvar"] = _comedi.comedi_trig_struct_trigvar_get
    if _newclass:trigvar = _swig_property(_comedi.comedi_trig_struct_trigvar_get, _comedi.comedi_trig_struct_trigvar_set)
    __swig_setmethods__["trigvar1"] = _comedi.comedi_trig_struct_trigvar1_set
    __swig_getmethods__["trigvar1"] = _comedi.comedi_trig_struct_trigvar1_get
    if _newclass:trigvar1 = _swig_property(_comedi.comedi_trig_struct_trigvar1_get, _comedi.comedi_trig_struct_trigvar1_set)
    __swig_setmethods__["data_len"] = _comedi.comedi_trig_struct_data_len_set
    __swig_getmethods__["data_len"] = _comedi.comedi_trig_struct_data_len_get
    if _newclass:data_len = _swig_property(_comedi.comedi_trig_struct_data_len_get, _comedi.comedi_trig_struct_data_len_set)
    __swig_setmethods__["unused"] = _comedi.comedi_trig_struct_unused_set
    __swig_getmethods__["unused"] = _comedi.comedi_trig_struct_unused_get
    if _newclass:unused = _swig_property(_comedi.comedi_trig_struct_unused_get, _comedi.comedi_trig_struct_unused_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_trig_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_trig_struct
    __del__ = lambda self : None;
comedi_trig_struct_swigregister = _comedi.comedi_trig_struct_swigregister
comedi_trig_struct_swigregister(comedi_trig_struct)

class comedi_insn_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_insn_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_insn_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["insn"] = _comedi.comedi_insn_struct_insn_set
    __swig_getmethods__["insn"] = _comedi.comedi_insn_struct_insn_get
    if _newclass:insn = _swig_property(_comedi.comedi_insn_struct_insn_get, _comedi.comedi_insn_struct_insn_set)
    __swig_setmethods__["n"] = _comedi.comedi_insn_struct_n_set
    __swig_getmethods__["n"] = _comedi.comedi_insn_struct_n_get
    if _newclass:n = _swig_property(_comedi.comedi_insn_struct_n_get, _comedi.comedi_insn_struct_n_set)
    __swig_setmethods__["data"] = _comedi.comedi_insn_struct_data_set
    __swig_getmethods__["data"] = _comedi.comedi_insn_struct_data_get
    if _newclass:data = _swig_property(_comedi.comedi_insn_struct_data_get, _comedi.comedi_insn_struct_data_set)
    __swig_setmethods__["subdev"] = _comedi.comedi_insn_struct_subdev_set
    __swig_getmethods__["subdev"] = _comedi.comedi_insn_struct_subdev_get
    if _newclass:subdev = _swig_property(_comedi.comedi_insn_struct_subdev_get, _comedi.comedi_insn_struct_subdev_set)
    __swig_setmethods__["chanspec"] = _comedi.comedi_insn_struct_chanspec_set
    __swig_getmethods__["chanspec"] = _comedi.comedi_insn_struct_chanspec_get
    if _newclass:chanspec = _swig_property(_comedi.comedi_insn_struct_chanspec_get, _comedi.comedi_insn_struct_chanspec_set)
    __swig_setmethods__["unused"] = _comedi.comedi_insn_struct_unused_set
    __swig_getmethods__["unused"] = _comedi.comedi_insn_struct_unused_get
    if _newclass:unused = _swig_property(_comedi.comedi_insn_struct_unused_get, _comedi.comedi_insn_struct_unused_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_insn_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_insn_struct
    __del__ = lambda self : None;
comedi_insn_struct_swigregister = _comedi.comedi_insn_struct_swigregister
comedi_insn_struct_swigregister(comedi_insn_struct)

class comedi_insnlist_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_insnlist_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_insnlist_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n_insns"] = _comedi.comedi_insnlist_struct_n_insns_set
    __swig_getmethods__["n_insns"] = _comedi.comedi_insnlist_struct_n_insns_get
    if _newclass:n_insns = _swig_property(_comedi.comedi_insnlist_struct_n_insns_get, _comedi.comedi_insnlist_struct_n_insns_set)
    __swig_setmethods__["insns"] = _comedi.comedi_insnlist_struct_insns_set
    __swig_getmethods__["insns"] = _comedi.comedi_insnlist_struct_insns_get
    if _newclass:insns = _swig_property(_comedi.comedi_insnlist_struct_insns_get, _comedi.comedi_insnlist_struct_insns_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_insnlist_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_insnlist_struct
    __del__ = lambda self : None;
comedi_insnlist_struct_swigregister = _comedi.comedi_insnlist_struct_swigregister
comedi_insnlist_struct_swigregister(comedi_insnlist_struct)

class comedi_cmd_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_cmd_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_cmd_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["subdev"] = _comedi.comedi_cmd_struct_subdev_set
    __swig_getmethods__["subdev"] = _comedi.comedi_cmd_struct_subdev_get
    if _newclass:subdev = _swig_property(_comedi.comedi_cmd_struct_subdev_get, _comedi.comedi_cmd_struct_subdev_set)
    __swig_setmethods__["flags"] = _comedi.comedi_cmd_struct_flags_set
    __swig_getmethods__["flags"] = _comedi.comedi_cmd_struct_flags_get
    if _newclass:flags = _swig_property(_comedi.comedi_cmd_struct_flags_get, _comedi.comedi_cmd_struct_flags_set)
    __swig_setmethods__["start_src"] = _comedi.comedi_cmd_struct_start_src_set
    __swig_getmethods__["start_src"] = _comedi.comedi_cmd_struct_start_src_get
    if _newclass:start_src = _swig_property(_comedi.comedi_cmd_struct_start_src_get, _comedi.comedi_cmd_struct_start_src_set)
    __swig_setmethods__["start_arg"] = _comedi.comedi_cmd_struct_start_arg_set
    __swig_getmethods__["start_arg"] = _comedi.comedi_cmd_struct_start_arg_get
    if _newclass:start_arg = _swig_property(_comedi.comedi_cmd_struct_start_arg_get, _comedi.comedi_cmd_struct_start_arg_set)
    __swig_setmethods__["scan_begin_src"] = _comedi.comedi_cmd_struct_scan_begin_src_set
    __swig_getmethods__["scan_begin_src"] = _comedi.comedi_cmd_struct_scan_begin_src_get
    if _newclass:scan_begin_src = _swig_property(_comedi.comedi_cmd_struct_scan_begin_src_get, _comedi.comedi_cmd_struct_scan_begin_src_set)
    __swig_setmethods__["scan_begin_arg"] = _comedi.comedi_cmd_struct_scan_begin_arg_set
    __swig_getmethods__["scan_begin_arg"] = _comedi.comedi_cmd_struct_scan_begin_arg_get
    if _newclass:scan_begin_arg = _swig_property(_comedi.comedi_cmd_struct_scan_begin_arg_get, _comedi.comedi_cmd_struct_scan_begin_arg_set)
    __swig_setmethods__["convert_src"] = _comedi.comedi_cmd_struct_convert_src_set
    __swig_getmethods__["convert_src"] = _comedi.comedi_cmd_struct_convert_src_get
    if _newclass:convert_src = _swig_property(_comedi.comedi_cmd_struct_convert_src_get, _comedi.comedi_cmd_struct_convert_src_set)
    __swig_setmethods__["convert_arg"] = _comedi.comedi_cmd_struct_convert_arg_set
    __swig_getmethods__["convert_arg"] = _comedi.comedi_cmd_struct_convert_arg_get
    if _newclass:convert_arg = _swig_property(_comedi.comedi_cmd_struct_convert_arg_get, _comedi.comedi_cmd_struct_convert_arg_set)
    __swig_setmethods__["scan_end_src"] = _comedi.comedi_cmd_struct_scan_end_src_set
    __swig_getmethods__["scan_end_src"] = _comedi.comedi_cmd_struct_scan_end_src_get
    if _newclass:scan_end_src = _swig_property(_comedi.comedi_cmd_struct_scan_end_src_get, _comedi.comedi_cmd_struct_scan_end_src_set)
    __swig_setmethods__["scan_end_arg"] = _comedi.comedi_cmd_struct_scan_end_arg_set
    __swig_getmethods__["scan_end_arg"] = _comedi.comedi_cmd_struct_scan_end_arg_get
    if _newclass:scan_end_arg = _swig_property(_comedi.comedi_cmd_struct_scan_end_arg_get, _comedi.comedi_cmd_struct_scan_end_arg_set)
    __swig_setmethods__["stop_src"] = _comedi.comedi_cmd_struct_stop_src_set
    __swig_getmethods__["stop_src"] = _comedi.comedi_cmd_struct_stop_src_get
    if _newclass:stop_src = _swig_property(_comedi.comedi_cmd_struct_stop_src_get, _comedi.comedi_cmd_struct_stop_src_set)
    __swig_setmethods__["stop_arg"] = _comedi.comedi_cmd_struct_stop_arg_set
    __swig_getmethods__["stop_arg"] = _comedi.comedi_cmd_struct_stop_arg_get
    if _newclass:stop_arg = _swig_property(_comedi.comedi_cmd_struct_stop_arg_get, _comedi.comedi_cmd_struct_stop_arg_set)
    __swig_setmethods__["chanlist"] = _comedi.comedi_cmd_struct_chanlist_set
    __swig_getmethods__["chanlist"] = _comedi.comedi_cmd_struct_chanlist_get
    if _newclass:chanlist = _swig_property(_comedi.comedi_cmd_struct_chanlist_get, _comedi.comedi_cmd_struct_chanlist_set)
    __swig_setmethods__["chanlist_len"] = _comedi.comedi_cmd_struct_chanlist_len_set
    __swig_getmethods__["chanlist_len"] = _comedi.comedi_cmd_struct_chanlist_len_get
    if _newclass:chanlist_len = _swig_property(_comedi.comedi_cmd_struct_chanlist_len_get, _comedi.comedi_cmd_struct_chanlist_len_set)
    __swig_setmethods__["data"] = _comedi.comedi_cmd_struct_data_set
    __swig_getmethods__["data"] = _comedi.comedi_cmd_struct_data_get
    if _newclass:data = _swig_property(_comedi.comedi_cmd_struct_data_get, _comedi.comedi_cmd_struct_data_set)
    __swig_setmethods__["data_len"] = _comedi.comedi_cmd_struct_data_len_set
    __swig_getmethods__["data_len"] = _comedi.comedi_cmd_struct_data_len_get
    if _newclass:data_len = _swig_property(_comedi.comedi_cmd_struct_data_len_get, _comedi.comedi_cmd_struct_data_len_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_cmd_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_cmd_struct
    __del__ = lambda self : None;
comedi_cmd_struct_swigregister = _comedi.comedi_cmd_struct_swigregister
comedi_cmd_struct_swigregister(comedi_cmd_struct)

class comedi_chaninfo_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_chaninfo_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_chaninfo_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["subdev"] = _comedi.comedi_chaninfo_struct_subdev_set
    __swig_getmethods__["subdev"] = _comedi.comedi_chaninfo_struct_subdev_get
    if _newclass:subdev = _swig_property(_comedi.comedi_chaninfo_struct_subdev_get, _comedi.comedi_chaninfo_struct_subdev_set)
    __swig_setmethods__["maxdata_list"] = _comedi.comedi_chaninfo_struct_maxdata_list_set
    __swig_getmethods__["maxdata_list"] = _comedi.comedi_chaninfo_struct_maxdata_list_get
    if _newclass:maxdata_list = _swig_property(_comedi.comedi_chaninfo_struct_maxdata_list_get, _comedi.comedi_chaninfo_struct_maxdata_list_set)
    __swig_setmethods__["flaglist"] = _comedi.comedi_chaninfo_struct_flaglist_set
    __swig_getmethods__["flaglist"] = _comedi.comedi_chaninfo_struct_flaglist_get
    if _newclass:flaglist = _swig_property(_comedi.comedi_chaninfo_struct_flaglist_get, _comedi.comedi_chaninfo_struct_flaglist_set)
    __swig_setmethods__["rangelist"] = _comedi.comedi_chaninfo_struct_rangelist_set
    __swig_getmethods__["rangelist"] = _comedi.comedi_chaninfo_struct_rangelist_get
    if _newclass:rangelist = _swig_property(_comedi.comedi_chaninfo_struct_rangelist_get, _comedi.comedi_chaninfo_struct_rangelist_set)
    __swig_setmethods__["unused"] = _comedi.comedi_chaninfo_struct_unused_set
    __swig_getmethods__["unused"] = _comedi.comedi_chaninfo_struct_unused_get
    if _newclass:unused = _swig_property(_comedi.comedi_chaninfo_struct_unused_get, _comedi.comedi_chaninfo_struct_unused_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_chaninfo_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_chaninfo_struct
    __del__ = lambda self : None;
comedi_chaninfo_struct_swigregister = _comedi.comedi_chaninfo_struct_swigregister
comedi_chaninfo_struct_swigregister(comedi_chaninfo_struct)

class comedi_rangeinfo_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_rangeinfo_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_rangeinfo_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["range_type"] = _comedi.comedi_rangeinfo_struct_range_type_set
    __swig_getmethods__["range_type"] = _comedi.comedi_rangeinfo_struct_range_type_get
    if _newclass:range_type = _swig_property(_comedi.comedi_rangeinfo_struct_range_type_get, _comedi.comedi_rangeinfo_struct_range_type_set)
    __swig_setmethods__["range_ptr"] = _comedi.comedi_rangeinfo_struct_range_ptr_set
    __swig_getmethods__["range_ptr"] = _comedi.comedi_rangeinfo_struct_range_ptr_get
    if _newclass:range_ptr = _swig_property(_comedi.comedi_rangeinfo_struct_range_ptr_get, _comedi.comedi_rangeinfo_struct_range_ptr_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_rangeinfo_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_rangeinfo_struct
    __del__ = lambda self : None;
comedi_rangeinfo_struct_swigregister = _comedi.comedi_rangeinfo_struct_swigregister
comedi_rangeinfo_struct_swigregister(comedi_rangeinfo_struct)

class comedi_krange_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_krange_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_krange_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["min"] = _comedi.comedi_krange_struct_min_set
    __swig_getmethods__["min"] = _comedi.comedi_krange_struct_min_get
    if _newclass:min = _swig_property(_comedi.comedi_krange_struct_min_get, _comedi.comedi_krange_struct_min_set)
    __swig_setmethods__["max"] = _comedi.comedi_krange_struct_max_set
    __swig_getmethods__["max"] = _comedi.comedi_krange_struct_max_get
    if _newclass:max = _swig_property(_comedi.comedi_krange_struct_max_get, _comedi.comedi_krange_struct_max_set)
    __swig_setmethods__["flags"] = _comedi.comedi_krange_struct_flags_set
    __swig_getmethods__["flags"] = _comedi.comedi_krange_struct_flags_get
    if _newclass:flags = _swig_property(_comedi.comedi_krange_struct_flags_get, _comedi.comedi_krange_struct_flags_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_krange_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_krange_struct
    __del__ = lambda self : None;
comedi_krange_struct_swigregister = _comedi.comedi_krange_struct_swigregister
comedi_krange_struct_swigregister(comedi_krange_struct)

class comedi_subdinfo_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_subdinfo_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_subdinfo_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _comedi.comedi_subdinfo_struct_type_set
    __swig_getmethods__["type"] = _comedi.comedi_subdinfo_struct_type_get
    if _newclass:type = _swig_property(_comedi.comedi_subdinfo_struct_type_get, _comedi.comedi_subdinfo_struct_type_set)
    __swig_setmethods__["n_chan"] = _comedi.comedi_subdinfo_struct_n_chan_set
    __swig_getmethods__["n_chan"] = _comedi.comedi_subdinfo_struct_n_chan_get
    if _newclass:n_chan = _swig_property(_comedi.comedi_subdinfo_struct_n_chan_get, _comedi.comedi_subdinfo_struct_n_chan_set)
    __swig_setmethods__["subd_flags"] = _comedi.comedi_subdinfo_struct_subd_flags_set
    __swig_getmethods__["subd_flags"] = _comedi.comedi_subdinfo_struct_subd_flags_get
    if _newclass:subd_flags = _swig_property(_comedi.comedi_subdinfo_struct_subd_flags_get, _comedi.comedi_subdinfo_struct_subd_flags_set)
    __swig_setmethods__["timer_type"] = _comedi.comedi_subdinfo_struct_timer_type_set
    __swig_getmethods__["timer_type"] = _comedi.comedi_subdinfo_struct_timer_type_get
    if _newclass:timer_type = _swig_property(_comedi.comedi_subdinfo_struct_timer_type_get, _comedi.comedi_subdinfo_struct_timer_type_set)
    __swig_setmethods__["len_chanlist"] = _comedi.comedi_subdinfo_struct_len_chanlist_set
    __swig_getmethods__["len_chanlist"] = _comedi.comedi_subdinfo_struct_len_chanlist_get
    if _newclass:len_chanlist = _swig_property(_comedi.comedi_subdinfo_struct_len_chanlist_get, _comedi.comedi_subdinfo_struct_len_chanlist_set)
    __swig_setmethods__["maxdata"] = _comedi.comedi_subdinfo_struct_maxdata_set
    __swig_getmethods__["maxdata"] = _comedi.comedi_subdinfo_struct_maxdata_get
    if _newclass:maxdata = _swig_property(_comedi.comedi_subdinfo_struct_maxdata_get, _comedi.comedi_subdinfo_struct_maxdata_set)
    __swig_setmethods__["flags"] = _comedi.comedi_subdinfo_struct_flags_set
    __swig_getmethods__["flags"] = _comedi.comedi_subdinfo_struct_flags_get
    if _newclass:flags = _swig_property(_comedi.comedi_subdinfo_struct_flags_get, _comedi.comedi_subdinfo_struct_flags_set)
    __swig_setmethods__["range_type"] = _comedi.comedi_subdinfo_struct_range_type_set
    __swig_getmethods__["range_type"] = _comedi.comedi_subdinfo_struct_range_type_get
    if _newclass:range_type = _swig_property(_comedi.comedi_subdinfo_struct_range_type_get, _comedi.comedi_subdinfo_struct_range_type_set)
    __swig_setmethods__["settling_time_0"] = _comedi.comedi_subdinfo_struct_settling_time_0_set
    __swig_getmethods__["settling_time_0"] = _comedi.comedi_subdinfo_struct_settling_time_0_get
    if _newclass:settling_time_0 = _swig_property(_comedi.comedi_subdinfo_struct_settling_time_0_get, _comedi.comedi_subdinfo_struct_settling_time_0_set)
    __swig_setmethods__["unused"] = _comedi.comedi_subdinfo_struct_unused_set
    __swig_getmethods__["unused"] = _comedi.comedi_subdinfo_struct_unused_get
    if _newclass:unused = _swig_property(_comedi.comedi_subdinfo_struct_unused_get, _comedi.comedi_subdinfo_struct_unused_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_subdinfo_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_subdinfo_struct
    __del__ = lambda self : None;
comedi_subdinfo_struct_swigregister = _comedi.comedi_subdinfo_struct_swigregister
comedi_subdinfo_struct_swigregister(comedi_subdinfo_struct)

class comedi_devinfo_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_devinfo_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_devinfo_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["version_code"] = _comedi.comedi_devinfo_struct_version_code_set
    __swig_getmethods__["version_code"] = _comedi.comedi_devinfo_struct_version_code_get
    if _newclass:version_code = _swig_property(_comedi.comedi_devinfo_struct_version_code_get, _comedi.comedi_devinfo_struct_version_code_set)
    __swig_setmethods__["n_subdevs"] = _comedi.comedi_devinfo_struct_n_subdevs_set
    __swig_getmethods__["n_subdevs"] = _comedi.comedi_devinfo_struct_n_subdevs_get
    if _newclass:n_subdevs = _swig_property(_comedi.comedi_devinfo_struct_n_subdevs_get, _comedi.comedi_devinfo_struct_n_subdevs_set)
    __swig_setmethods__["driver_name"] = _comedi.comedi_devinfo_struct_driver_name_set
    __swig_getmethods__["driver_name"] = _comedi.comedi_devinfo_struct_driver_name_get
    if _newclass:driver_name = _swig_property(_comedi.comedi_devinfo_struct_driver_name_get, _comedi.comedi_devinfo_struct_driver_name_set)
    __swig_setmethods__["board_name"] = _comedi.comedi_devinfo_struct_board_name_set
    __swig_getmethods__["board_name"] = _comedi.comedi_devinfo_struct_board_name_get
    if _newclass:board_name = _swig_property(_comedi.comedi_devinfo_struct_board_name_get, _comedi.comedi_devinfo_struct_board_name_set)
    __swig_setmethods__["read_subdevice"] = _comedi.comedi_devinfo_struct_read_subdevice_set
    __swig_getmethods__["read_subdevice"] = _comedi.comedi_devinfo_struct_read_subdevice_get
    if _newclass:read_subdevice = _swig_property(_comedi.comedi_devinfo_struct_read_subdevice_get, _comedi.comedi_devinfo_struct_read_subdevice_set)
    __swig_setmethods__["write_subdevice"] = _comedi.comedi_devinfo_struct_write_subdevice_set
    __swig_getmethods__["write_subdevice"] = _comedi.comedi_devinfo_struct_write_subdevice_get
    if _newclass:write_subdevice = _swig_property(_comedi.comedi_devinfo_struct_write_subdevice_get, _comedi.comedi_devinfo_struct_write_subdevice_set)
    __swig_setmethods__["unused"] = _comedi.comedi_devinfo_struct_unused_set
    __swig_getmethods__["unused"] = _comedi.comedi_devinfo_struct_unused_get
    if _newclass:unused = _swig_property(_comedi.comedi_devinfo_struct_unused_get, _comedi.comedi_devinfo_struct_unused_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_devinfo_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_devinfo_struct
    __del__ = lambda self : None;
comedi_devinfo_struct_swigregister = _comedi.comedi_devinfo_struct_swigregister
comedi_devinfo_struct_swigregister(comedi_devinfo_struct)

class comedi_devconfig_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_devconfig_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_devconfig_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["board_name"] = _comedi.comedi_devconfig_struct_board_name_set
    __swig_getmethods__["board_name"] = _comedi.comedi_devconfig_struct_board_name_get
    if _newclass:board_name = _swig_property(_comedi.comedi_devconfig_struct_board_name_get, _comedi.comedi_devconfig_struct_board_name_set)
    __swig_setmethods__["options"] = _comedi.comedi_devconfig_struct_options_set
    __swig_getmethods__["options"] = _comedi.comedi_devconfig_struct_options_get
    if _newclass:options = _swig_property(_comedi.comedi_devconfig_struct_options_get, _comedi.comedi_devconfig_struct_options_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_devconfig_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_devconfig_struct
    __del__ = lambda self : None;
comedi_devconfig_struct_swigregister = _comedi.comedi_devconfig_struct_swigregister
comedi_devconfig_struct_swigregister(comedi_devconfig_struct)

class comedi_bufconfig_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_bufconfig_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_bufconfig_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["subdevice"] = _comedi.comedi_bufconfig_struct_subdevice_set
    __swig_getmethods__["subdevice"] = _comedi.comedi_bufconfig_struct_subdevice_get
    if _newclass:subdevice = _swig_property(_comedi.comedi_bufconfig_struct_subdevice_get, _comedi.comedi_bufconfig_struct_subdevice_set)
    __swig_setmethods__["flags"] = _comedi.comedi_bufconfig_struct_flags_set
    __swig_getmethods__["flags"] = _comedi.comedi_bufconfig_struct_flags_get
    if _newclass:flags = _swig_property(_comedi.comedi_bufconfig_struct_flags_get, _comedi.comedi_bufconfig_struct_flags_set)
    __swig_setmethods__["maximum_size"] = _comedi.comedi_bufconfig_struct_maximum_size_set
    __swig_getmethods__["maximum_size"] = _comedi.comedi_bufconfig_struct_maximum_size_get
    if _newclass:maximum_size = _swig_property(_comedi.comedi_bufconfig_struct_maximum_size_get, _comedi.comedi_bufconfig_struct_maximum_size_set)
    __swig_setmethods__["size"] = _comedi.comedi_bufconfig_struct_size_set
    __swig_getmethods__["size"] = _comedi.comedi_bufconfig_struct_size_get
    if _newclass:size = _swig_property(_comedi.comedi_bufconfig_struct_size_get, _comedi.comedi_bufconfig_struct_size_set)
    __swig_setmethods__["unused"] = _comedi.comedi_bufconfig_struct_unused_set
    __swig_getmethods__["unused"] = _comedi.comedi_bufconfig_struct_unused_get
    if _newclass:unused = _swig_property(_comedi.comedi_bufconfig_struct_unused_get, _comedi.comedi_bufconfig_struct_unused_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_bufconfig_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_bufconfig_struct
    __del__ = lambda self : None;
comedi_bufconfig_struct_swigregister = _comedi.comedi_bufconfig_struct_swigregister
comedi_bufconfig_struct_swigregister(comedi_bufconfig_struct)

class comedi_bufinfo_struct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_bufinfo_struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_bufinfo_struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["subdevice"] = _comedi.comedi_bufinfo_struct_subdevice_set
    __swig_getmethods__["subdevice"] = _comedi.comedi_bufinfo_struct_subdevice_get
    if _newclass:subdevice = _swig_property(_comedi.comedi_bufinfo_struct_subdevice_get, _comedi.comedi_bufinfo_struct_subdevice_set)
    __swig_setmethods__["bytes_read"] = _comedi.comedi_bufinfo_struct_bytes_read_set
    __swig_getmethods__["bytes_read"] = _comedi.comedi_bufinfo_struct_bytes_read_get
    if _newclass:bytes_read = _swig_property(_comedi.comedi_bufinfo_struct_bytes_read_get, _comedi.comedi_bufinfo_struct_bytes_read_set)
    __swig_setmethods__["buf_write_ptr"] = _comedi.comedi_bufinfo_struct_buf_write_ptr_set
    __swig_getmethods__["buf_write_ptr"] = _comedi.comedi_bufinfo_struct_buf_write_ptr_get
    if _newclass:buf_write_ptr = _swig_property(_comedi.comedi_bufinfo_struct_buf_write_ptr_get, _comedi.comedi_bufinfo_struct_buf_write_ptr_set)
    __swig_setmethods__["buf_read_ptr"] = _comedi.comedi_bufinfo_struct_buf_read_ptr_set
    __swig_getmethods__["buf_read_ptr"] = _comedi.comedi_bufinfo_struct_buf_read_ptr_get
    if _newclass:buf_read_ptr = _swig_property(_comedi.comedi_bufinfo_struct_buf_read_ptr_get, _comedi.comedi_bufinfo_struct_buf_read_ptr_set)
    __swig_setmethods__["buf_write_count"] = _comedi.comedi_bufinfo_struct_buf_write_count_set
    __swig_getmethods__["buf_write_count"] = _comedi.comedi_bufinfo_struct_buf_write_count_get
    if _newclass:buf_write_count = _swig_property(_comedi.comedi_bufinfo_struct_buf_write_count_get, _comedi.comedi_bufinfo_struct_buf_write_count_set)
    __swig_setmethods__["buf_read_count"] = _comedi.comedi_bufinfo_struct_buf_read_count_set
    __swig_getmethods__["buf_read_count"] = _comedi.comedi_bufinfo_struct_buf_read_count_get
    if _newclass:buf_read_count = _swig_property(_comedi.comedi_bufinfo_struct_buf_read_count_get, _comedi.comedi_bufinfo_struct_buf_read_count_set)
    __swig_setmethods__["bytes_written"] = _comedi.comedi_bufinfo_struct_bytes_written_set
    __swig_getmethods__["bytes_written"] = _comedi.comedi_bufinfo_struct_bytes_written_get
    if _newclass:bytes_written = _swig_property(_comedi.comedi_bufinfo_struct_bytes_written_get, _comedi.comedi_bufinfo_struct_bytes_written_set)
    __swig_setmethods__["unused"] = _comedi.comedi_bufinfo_struct_unused_set
    __swig_getmethods__["unused"] = _comedi.comedi_bufinfo_struct_unused_get
    if _newclass:unused = _swig_property(_comedi.comedi_bufinfo_struct_unused_get, _comedi.comedi_bufinfo_struct_unused_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_bufinfo_struct(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_bufinfo_struct
    __del__ = lambda self : None;
comedi_bufinfo_struct_swigregister = _comedi.comedi_bufinfo_struct_swigregister
comedi_bufinfo_struct_swigregister(comedi_bufinfo_struct)

RF_EXTERNAL = _comedi.RF_EXTERNAL
UNIT_volt = _comedi.UNIT_volt
UNIT_mA = _comedi.UNIT_mA
UNIT_none = _comedi.UNIT_none
COMEDI_CB_EOS = _comedi.COMEDI_CB_EOS
COMEDI_CB_EOA = _comedi.COMEDI_CB_EOA
COMEDI_CB_BLOCK = _comedi.COMEDI_CB_BLOCK
COMEDI_CB_EOBUF = _comedi.COMEDI_CB_EOBUF
COMEDI_CB_ERROR = _comedi.COMEDI_CB_ERROR
COMEDI_CB_OVERFLOW = _comedi.COMEDI_CB_OVERFLOW
I8254_MODE0 = _comedi.I8254_MODE0
I8254_MODE1 = _comedi.I8254_MODE1
I8254_MODE2 = _comedi.I8254_MODE2
I8254_MODE3 = _comedi.I8254_MODE3
I8254_MODE4 = _comedi.I8254_MODE4
I8254_MODE5 = _comedi.I8254_MODE5
I8254_BCD = _comedi.I8254_BCD
I8254_BINARY = _comedi.I8254_BINARY
NI_GPCT_COUNTING_MODE_SHIFT = _comedi.NI_GPCT_COUNTING_MODE_SHIFT
NI_GPCT_INDEX_PHASE_BITSHIFT = _comedi.NI_GPCT_INDEX_PHASE_BITSHIFT
NI_GPCT_COUNTING_DIRECTION_SHIFT = _comedi.NI_GPCT_COUNTING_DIRECTION_SHIFT
NI_GPCT_GATE_ON_BOTH_EDGES_BIT = _comedi.NI_GPCT_GATE_ON_BOTH_EDGES_BIT
NI_GPCT_EDGE_GATE_MODE_MASK = _comedi.NI_GPCT_EDGE_GATE_MODE_MASK
NI_GPCT_EDGE_GATE_STARTS_STOPS_BITS = _comedi.NI_GPCT_EDGE_GATE_STARTS_STOPS_BITS
NI_GPCT_EDGE_GATE_STOPS_STARTS_BITS = _comedi.NI_GPCT_EDGE_GATE_STOPS_STARTS_BITS
NI_GPCT_EDGE_GATE_STARTS_BITS = _comedi.NI_GPCT_EDGE_GATE_STARTS_BITS
NI_GPCT_EDGE_GATE_NO_STARTS_NO_STOPS_BITS = _comedi.NI_GPCT_EDGE_GATE_NO_STARTS_NO_STOPS_BITS
NI_GPCT_STOP_MODE_MASK = _comedi.NI_GPCT_STOP_MODE_MASK
NI_GPCT_STOP_ON_GATE_BITS = _comedi.NI_GPCT_STOP_ON_GATE_BITS
NI_GPCT_STOP_ON_GATE_OR_TC_BITS = _comedi.NI_GPCT_STOP_ON_GATE_OR_TC_BITS
NI_GPCT_STOP_ON_GATE_OR_SECOND_TC_BITS = _comedi.NI_GPCT_STOP_ON_GATE_OR_SECOND_TC_BITS
NI_GPCT_LOAD_B_SELECT_BIT = _comedi.NI_GPCT_LOAD_B_SELECT_BIT
NI_GPCT_OUTPUT_MODE_MASK = _comedi.NI_GPCT_OUTPUT_MODE_MASK
NI_GPCT_OUTPUT_TC_PULSE_BITS = _comedi.NI_GPCT_OUTPUT_TC_PULSE_BITS
NI_GPCT_OUTPUT_TC_TOGGLE_BITS = _comedi.NI_GPCT_OUTPUT_TC_TOGGLE_BITS
NI_GPCT_OUTPUT_TC_OR_GATE_TOGGLE_BITS = _comedi.NI_GPCT_OUTPUT_TC_OR_GATE_TOGGLE_BITS
NI_GPCT_HARDWARE_DISARM_MASK = _comedi.NI_GPCT_HARDWARE_DISARM_MASK
NI_GPCT_NO_HARDWARE_DISARM_BITS = _comedi.NI_GPCT_NO_HARDWARE_DISARM_BITS
NI_GPCT_DISARM_AT_TC_BITS = _comedi.NI_GPCT_DISARM_AT_TC_BITS
NI_GPCT_DISARM_AT_GATE_BITS = _comedi.NI_GPCT_DISARM_AT_GATE_BITS
NI_GPCT_DISARM_AT_TC_OR_GATE_BITS = _comedi.NI_GPCT_DISARM_AT_TC_OR_GATE_BITS
NI_GPCT_LOADING_ON_TC_BIT = _comedi.NI_GPCT_LOADING_ON_TC_BIT
NI_GPCT_LOADING_ON_GATE_BIT = _comedi.NI_GPCT_LOADING_ON_GATE_BIT
NI_GPCT_COUNTING_MODE_MASK = _comedi.NI_GPCT_COUNTING_MODE_MASK
NI_GPCT_COUNTING_MODE_NORMAL_BITS = _comedi.NI_GPCT_COUNTING_MODE_NORMAL_BITS
NI_GPCT_COUNTING_MODE_QUADRATURE_X1_BITS = _comedi.NI_GPCT_COUNTING_MODE_QUADRATURE_X1_BITS
NI_GPCT_COUNTING_MODE_QUADRATURE_X2_BITS = _comedi.NI_GPCT_COUNTING_MODE_QUADRATURE_X2_BITS
NI_GPCT_COUNTING_MODE_QUADRATURE_X4_BITS = _comedi.NI_GPCT_COUNTING_MODE_QUADRATURE_X4_BITS
NI_GPCT_COUNTING_MODE_TWO_PULSE_BITS = _comedi.NI_GPCT_COUNTING_MODE_TWO_PULSE_BITS
NI_GPCT_COUNTING_MODE_SYNC_SOURCE_BITS = _comedi.NI_GPCT_COUNTING_MODE_SYNC_SOURCE_BITS
NI_GPCT_INDEX_PHASE_MASK = _comedi.NI_GPCT_INDEX_PHASE_MASK
NI_GPCT_INDEX_PHASE_LOW_A_LOW_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_LOW_A_LOW_B_BITS
NI_GPCT_INDEX_PHASE_LOW_A_HIGH_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_LOW_A_HIGH_B_BITS
NI_GPCT_INDEX_PHASE_HIGH_A_LOW_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_HIGH_A_LOW_B_BITS
NI_GPCT_INDEX_PHASE_HIGH_A_HIGH_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_HIGH_A_HIGH_B_BITS
NI_GPCT_INDEX_ENABLE_BIT = _comedi.NI_GPCT_INDEX_ENABLE_BIT
NI_GPCT_COUNTING_DIRECTION_MASK = _comedi.NI_GPCT_COUNTING_DIRECTION_MASK
NI_GPCT_COUNTING_DIRECTION_DOWN_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_DOWN_BITS
NI_GPCT_COUNTING_DIRECTION_UP_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_UP_BITS
NI_GPCT_COUNTING_DIRECTION_HW_UP_DOWN_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_HW_UP_DOWN_BITS
NI_GPCT_COUNTING_DIRECTION_HW_GATE_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_HW_GATE_BITS
NI_GPCT_RELOAD_SOURCE_MASK = _comedi.NI_GPCT_RELOAD_SOURCE_MASK
NI_GPCT_RELOAD_SOURCE_FIXED_BITS = _comedi.NI_GPCT_RELOAD_SOURCE_FIXED_BITS
NI_GPCT_RELOAD_SOURCE_SWITCHING_BITS = _comedi.NI_GPCT_RELOAD_SOURCE_SWITCHING_BITS
NI_GPCT_RELOAD_SOURCE_GATE_SELECT_BITS = _comedi.NI_GPCT_RELOAD_SOURCE_GATE_SELECT_BITS
NI_GPCT_OR_GATE_BIT = _comedi.NI_GPCT_OR_GATE_BIT
NI_GPCT_INVERT_OUTPUT_BIT = _comedi.NI_GPCT_INVERT_OUTPUT_BIT
NI_GPCT_CLOCK_SRC_SELECT_MASK = _comedi.NI_GPCT_CLOCK_SRC_SELECT_MASK
NI_GPCT_TIMEBASE_1_CLOCK_SRC_BITS = _comedi.NI_GPCT_TIMEBASE_1_CLOCK_SRC_BITS
NI_GPCT_TIMEBASE_2_CLOCK_SRC_BITS = _comedi.NI_GPCT_TIMEBASE_2_CLOCK_SRC_BITS
NI_GPCT_TIMEBASE_3_CLOCK_SRC_BITS = _comedi.NI_GPCT_TIMEBASE_3_CLOCK_SRC_BITS
NI_GPCT_LOGIC_LOW_CLOCK_SRC_BITS = _comedi.NI_GPCT_LOGIC_LOW_CLOCK_SRC_BITS
NI_GPCT_NEXT_GATE_CLOCK_SRC_BITS = _comedi.NI_GPCT_NEXT_GATE_CLOCK_SRC_BITS
NI_GPCT_NEXT_TC_CLOCK_SRC_BITS = _comedi.NI_GPCT_NEXT_TC_CLOCK_SRC_BITS
NI_GPCT_SOURCE_PIN_i_CLOCK_SRC_BITS = _comedi.NI_GPCT_SOURCE_PIN_i_CLOCK_SRC_BITS
NI_GPCT_PXI10_CLOCK_SRC_BITS = _comedi.NI_GPCT_PXI10_CLOCK_SRC_BITS
NI_GPCT_PXI_STAR_TRIGGER_CLOCK_SRC_BITS = _comedi.NI_GPCT_PXI_STAR_TRIGGER_CLOCK_SRC_BITS
NI_GPCT_ANALOG_TRIGGER_OUT_CLOCK_SRC_BITS = _comedi.NI_GPCT_ANALOG_TRIGGER_OUT_CLOCK_SRC_BITS
NI_GPCT_PRESCALE_MODE_CLOCK_SRC_MASK = _comedi.NI_GPCT_PRESCALE_MODE_CLOCK_SRC_MASK
NI_GPCT_NO_PRESCALE_CLOCK_SRC_BITS = _comedi.NI_GPCT_NO_PRESCALE_CLOCK_SRC_BITS
NI_GPCT_PRESCALE_X2_CLOCK_SRC_BITS = _comedi.NI_GPCT_PRESCALE_X2_CLOCK_SRC_BITS
NI_GPCT_PRESCALE_X8_CLOCK_SRC_BITS = _comedi.NI_GPCT_PRESCALE_X8_CLOCK_SRC_BITS
NI_GPCT_INVERT_CLOCK_SRC_BIT = _comedi.NI_GPCT_INVERT_CLOCK_SRC_BIT
NI_GPCT_TIMESTAMP_MUX_GATE_SELECT = _comedi.NI_GPCT_TIMESTAMP_MUX_GATE_SELECT
NI_GPCT_AI_START2_GATE_SELECT = _comedi.NI_GPCT_AI_START2_GATE_SELECT
NI_GPCT_PXI_STAR_TRIGGER_GATE_SELECT = _comedi.NI_GPCT_PXI_STAR_TRIGGER_GATE_SELECT
NI_GPCT_NEXT_OUT_GATE_SELECT = _comedi.NI_GPCT_NEXT_OUT_GATE_SELECT
NI_GPCT_AI_START1_GATE_SELECT = _comedi.NI_GPCT_AI_START1_GATE_SELECT
NI_GPCT_NEXT_SOURCE_GATE_SELECT = _comedi.NI_GPCT_NEXT_SOURCE_GATE_SELECT
NI_GPCT_ANALOG_TRIGGER_OUT_GATE_SELECT = _comedi.NI_GPCT_ANALOG_TRIGGER_OUT_GATE_SELECT
NI_GPCT_LOGIC_LOW_GATE_SELECT = _comedi.NI_GPCT_LOGIC_LOW_GATE_SELECT
NI_GPCT_SOURCE_PIN_i_GATE_SELECT = _comedi.NI_GPCT_SOURCE_PIN_i_GATE_SELECT
NI_GPCT_GATE_PIN_i_GATE_SELECT = _comedi.NI_GPCT_GATE_PIN_i_GATE_SELECT
NI_GPCT_UP_DOWN_PIN_i_GATE_SELECT = _comedi.NI_GPCT_UP_DOWN_PIN_i_GATE_SELECT
NI_GPCT_SELECTED_GATE_GATE_SELECT = _comedi.NI_GPCT_SELECTED_GATE_GATE_SELECT
NI_GPCT_DISABLED_GATE_SELECT = _comedi.NI_GPCT_DISABLED_GATE_SELECT
NI_GPCT_SOURCE_ENCODER_A = _comedi.NI_GPCT_SOURCE_ENCODER_A
NI_GPCT_SOURCE_ENCODER_B = _comedi.NI_GPCT_SOURCE_ENCODER_B
NI_GPCT_SOURCE_ENCODER_Z = _comedi.NI_GPCT_SOURCE_ENCODER_Z
NI_GPCT_DISABLED_OTHER_SELECT = _comedi.NI_GPCT_DISABLED_OTHER_SELECT
NI_GPCT_ARM_IMMEDIATE = _comedi.NI_GPCT_ARM_IMMEDIATE
NI_GPCT_ARM_PAIRED_IMMEDIATE = _comedi.NI_GPCT_ARM_PAIRED_IMMEDIATE
NI_GPCT_ARM_UNKNOWN = _comedi.NI_GPCT_ARM_UNKNOWN
NI_GPCT_FILTER_OFF = _comedi.NI_GPCT_FILTER_OFF
NI_GPCT_FILTER_TIMEBASE_3_SYNC = _comedi.NI_GPCT_FILTER_TIMEBASE_3_SYNC
NI_GPCT_FILTER_100x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_100x_TIMEBASE_1
NI_GPCT_FILTER_20x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_20x_TIMEBASE_1
NI_GPCT_FILTER_10x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_10x_TIMEBASE_1
NI_GPCT_FILTER_2x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_2x_TIMEBASE_1
NI_GPCT_FILTER_2x_TIMEBASE_3 = _comedi.NI_GPCT_FILTER_2x_TIMEBASE_3
NI_PFI_FILTER_OFF = _comedi.NI_PFI_FILTER_OFF
NI_PFI_FILTER_125ns = _comedi.NI_PFI_FILTER_125ns
NI_PFI_FILTER_6425ns = _comedi.NI_PFI_FILTER_6425ns
NI_PFI_FILTER_2550us = _comedi.NI_PFI_FILTER_2550us
NI_MIO_INTERNAL_CLOCK = _comedi.NI_MIO_INTERNAL_CLOCK
NI_MIO_RTSI_CLOCK = _comedi.NI_MIO_RTSI_CLOCK
NI_MIO_PLL_PXI_STAR_TRIGGER_CLOCK = _comedi.NI_MIO_PLL_PXI_STAR_TRIGGER_CLOCK
NI_MIO_PLL_PXI10_CLOCK = _comedi.NI_MIO_PLL_PXI10_CLOCK
NI_MIO_PLL_RTSI0_CLOCK = _comedi.NI_MIO_PLL_RTSI0_CLOCK
NI_RTSI_OUTPUT_ADR_START1 = _comedi.NI_RTSI_OUTPUT_ADR_START1
NI_RTSI_OUTPUT_ADR_START2 = _comedi.NI_RTSI_OUTPUT_ADR_START2
NI_RTSI_OUTPUT_SCLKG = _comedi.NI_RTSI_OUTPUT_SCLKG
NI_RTSI_OUTPUT_DACUPDN = _comedi.NI_RTSI_OUTPUT_DACUPDN
NI_RTSI_OUTPUT_DA_START1 = _comedi.NI_RTSI_OUTPUT_DA_START1
NI_RTSI_OUTPUT_G_SRC0 = _comedi.NI_RTSI_OUTPUT_G_SRC0
NI_RTSI_OUTPUT_G_GATE0 = _comedi.NI_RTSI_OUTPUT_G_GATE0
NI_RTSI_OUTPUT_RGOUT0 = _comedi.NI_RTSI_OUTPUT_RGOUT0
NI_RTSI_OUTPUT_RTSI_BRD_0 = _comedi.NI_RTSI_OUTPUT_RTSI_BRD_0
NI_RTSI_OUTPUT_RTSI_OSC = _comedi.NI_RTSI_OUTPUT_RTSI_OSC
NI_PFI_OUTPUT_PFI_DEFAULT = _comedi.NI_PFI_OUTPUT_PFI_DEFAULT
NI_PFI_OUTPUT_AI_START1 = _comedi.NI_PFI_OUTPUT_AI_START1
NI_PFI_OUTPUT_AI_START2 = _comedi.NI_PFI_OUTPUT_AI_START2
NI_PFI_OUTPUT_AI_CONVERT = _comedi.NI_PFI_OUTPUT_AI_CONVERT
NI_PFI_OUTPUT_G_SRC1 = _comedi.NI_PFI_OUTPUT_G_SRC1
NI_PFI_OUTPUT_G_GATE1 = _comedi.NI_PFI_OUTPUT_G_GATE1
NI_PFI_OUTPUT_AO_UPDATE_N = _comedi.NI_PFI_OUTPUT_AO_UPDATE_N
NI_PFI_OUTPUT_AO_START1 = _comedi.NI_PFI_OUTPUT_AO_START1
NI_PFI_OUTPUT_AI_START_PULSE = _comedi.NI_PFI_OUTPUT_AI_START_PULSE
NI_PFI_OUTPUT_G_SRC0 = _comedi.NI_PFI_OUTPUT_G_SRC0
NI_PFI_OUTPUT_G_GATE0 = _comedi.NI_PFI_OUTPUT_G_GATE0
NI_PFI_OUTPUT_EXT_STROBE = _comedi.NI_PFI_OUTPUT_EXT_STROBE
NI_PFI_OUTPUT_AI_EXT_MUX_CLK = _comedi.NI_PFI_OUTPUT_AI_EXT_MUX_CLK
NI_PFI_OUTPUT_GOUT0 = _comedi.NI_PFI_OUTPUT_GOUT0
NI_PFI_OUTPUT_GOUT1 = _comedi.NI_PFI_OUTPUT_GOUT1
NI_PFI_OUTPUT_FREQ_OUT = _comedi.NI_PFI_OUTPUT_FREQ_OUT
NI_PFI_OUTPUT_PFI_DO = _comedi.NI_PFI_OUTPUT_PFI_DO
NI_PFI_OUTPUT_I_ATRIG = _comedi.NI_PFI_OUTPUT_I_ATRIG
NI_PFI_OUTPUT_RTSI0 = _comedi.NI_PFI_OUTPUT_RTSI0
NI_PFI_OUTPUT_PXI_STAR_TRIGGER_IN = _comedi.NI_PFI_OUTPUT_PXI_STAR_TRIGGER_IN
NI_PFI_OUTPUT_SCXI_TRIG1 = _comedi.NI_PFI_OUTPUT_SCXI_TRIG1
NI_PFI_OUTPUT_DIO_CHANGE_DETECT_RTSI = _comedi.NI_PFI_OUTPUT_DIO_CHANGE_DETECT_RTSI
NI_PFI_OUTPUT_CDI_SAMPLE = _comedi.NI_PFI_OUTPUT_CDI_SAMPLE
NI_PFI_OUTPUT_CDO_UPDATE = _comedi.NI_PFI_OUTPUT_CDO_UPDATE
COMEDI_COUNTER_ARMED = _comedi.COMEDI_COUNTER_ARMED
COMEDI_COUNTER_COUNTING = _comedi.COMEDI_COUNTER_COUNTING
COMEDI_COUNTER_TERMINAL_COUNT = _comedi.COMEDI_COUNTER_TERMINAL_COUNT
class comedi_range(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_range, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_range, name)
    __repr__ = _swig_repr
    __swig_setmethods__["min"] = _comedi.comedi_range_min_set
    __swig_getmethods__["min"] = _comedi.comedi_range_min_get
    if _newclass:min = _swig_property(_comedi.comedi_range_min_get, _comedi.comedi_range_min_set)
    __swig_setmethods__["max"] = _comedi.comedi_range_max_set
    __swig_getmethods__["max"] = _comedi.comedi_range_max_get
    if _newclass:max = _swig_property(_comedi.comedi_range_max_get, _comedi.comedi_range_max_set)
    __swig_setmethods__["unit"] = _comedi.comedi_range_unit_set
    __swig_getmethods__["unit"] = _comedi.comedi_range_unit_get
    if _newclass:unit = _swig_property(_comedi.comedi_range_unit_get, _comedi.comedi_range_unit_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_range(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_range
    __del__ = lambda self : None;
comedi_range_swigregister = _comedi.comedi_range_swigregister
comedi_range_swigregister(comedi_range)

class comedi_sv_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_sv_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_sv_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dev"] = _comedi.comedi_sv_t_dev_set
    __swig_getmethods__["dev"] = _comedi.comedi_sv_t_dev_get
    if _newclass:dev = _swig_property(_comedi.comedi_sv_t_dev_get, _comedi.comedi_sv_t_dev_set)
    __swig_setmethods__["subdevice"] = _comedi.comedi_sv_t_subdevice_set
    __swig_getmethods__["subdevice"] = _comedi.comedi_sv_t_subdevice_get
    if _newclass:subdevice = _swig_property(_comedi.comedi_sv_t_subdevice_get, _comedi.comedi_sv_t_subdevice_set)
    __swig_setmethods__["chan"] = _comedi.comedi_sv_t_chan_set
    __swig_getmethods__["chan"] = _comedi.comedi_sv_t_chan_get
    if _newclass:chan = _swig_property(_comedi.comedi_sv_t_chan_get, _comedi.comedi_sv_t_chan_set)
    __swig_setmethods__["range"] = _comedi.comedi_sv_t_range_set
    __swig_getmethods__["range"] = _comedi.comedi_sv_t_range_get
    if _newclass:range = _swig_property(_comedi.comedi_sv_t_range_get, _comedi.comedi_sv_t_range_set)
    __swig_setmethods__["aref"] = _comedi.comedi_sv_t_aref_set
    __swig_getmethods__["aref"] = _comedi.comedi_sv_t_aref_get
    if _newclass:aref = _swig_property(_comedi.comedi_sv_t_aref_get, _comedi.comedi_sv_t_aref_set)
    __swig_setmethods__["n"] = _comedi.comedi_sv_t_n_set
    __swig_getmethods__["n"] = _comedi.comedi_sv_t_n_get
    if _newclass:n = _swig_property(_comedi.comedi_sv_t_n_get, _comedi.comedi_sv_t_n_set)
    __swig_setmethods__["maxdata"] = _comedi.comedi_sv_t_maxdata_set
    __swig_getmethods__["maxdata"] = _comedi.comedi_sv_t_maxdata_get
    if _newclass:maxdata = _swig_property(_comedi.comedi_sv_t_maxdata_get, _comedi.comedi_sv_t_maxdata_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_sv_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_sv_t
    __del__ = lambda self : None;
comedi_sv_t_swigregister = _comedi.comedi_sv_t_swigregister
comedi_sv_t_swigregister(comedi_sv_t)

COMEDI_OOR_NUMBER = _comedi.COMEDI_OOR_NUMBER
COMEDI_OOR_NAN = _comedi.COMEDI_OOR_NAN
comedi_open = _comedi.comedi_open
comedi_close = _comedi.comedi_close
comedi_loglevel = _comedi.comedi_loglevel
comedi_perror = _comedi.comedi_perror
comedi_strerror = _comedi.comedi_strerror
comedi_errno = _comedi.comedi_errno
comedi_fileno = _comedi.comedi_fileno
comedi_set_global_oor_behavior = _comedi.comedi_set_global_oor_behavior
comedi_get_n_subdevices = _comedi.comedi_get_n_subdevices
comedi_get_version_code = _comedi.comedi_get_version_code
comedi_get_driver_name = _comedi.comedi_get_driver_name
comedi_get_board_name = _comedi.comedi_get_board_name
comedi_get_read_subdevice = _comedi.comedi_get_read_subdevice
comedi_get_write_subdevice = _comedi.comedi_get_write_subdevice
comedi_get_subdevice_type = _comedi.comedi_get_subdevice_type
comedi_find_subdevice_by_type = _comedi.comedi_find_subdevice_by_type
comedi_get_subdevice_flags = _comedi.comedi_get_subdevice_flags
comedi_get_n_channels = _comedi.comedi_get_n_channels
comedi_range_is_chan_specific = _comedi.comedi_range_is_chan_specific
comedi_maxdata_is_chan_specific = _comedi.comedi_maxdata_is_chan_specific
comedi_get_maxdata = _comedi.comedi_get_maxdata
comedi_get_n_ranges = _comedi.comedi_get_n_ranges
comedi_get_range = _comedi.comedi_get_range
comedi_find_range = _comedi.comedi_find_range
comedi_get_buffer_size = _comedi.comedi_get_buffer_size
comedi_get_max_buffer_size = _comedi.comedi_get_max_buffer_size
comedi_set_buffer_size = _comedi.comedi_set_buffer_size
comedi_do_insnlist = _comedi.comedi_do_insnlist
comedi_do_insn = _comedi.comedi_do_insn
comedi_lock = _comedi.comedi_lock
comedi_unlock = _comedi.comedi_unlock
comedi_to_phys = _comedi.comedi_to_phys
comedi_from_phys = _comedi.comedi_from_phys
comedi_sampl_to_phys = _comedi.comedi_sampl_to_phys
comedi_sampl_from_phys = _comedi.comedi_sampl_from_phys
comedi_data_read = _comedi.comedi_data_read
comedi_data_read_n = _comedi.comedi_data_read_n
comedi_data_read_hint = _comedi.comedi_data_read_hint
comedi_data_read_delayed = _comedi.comedi_data_read_delayed
comedi_data_write = _comedi.comedi_data_write
comedi_dio_config = _comedi.comedi_dio_config
comedi_dio_get_config = _comedi.comedi_dio_get_config
comedi_dio_read = _comedi.comedi_dio_read
comedi_dio_write = _comedi.comedi_dio_write
comedi_dio_bitfield = _comedi.comedi_dio_bitfield
comedi_dio_bitfield2 = _comedi.comedi_dio_bitfield2
comedi_sv_init = _comedi.comedi_sv_init
comedi_sv_update = _comedi.comedi_sv_update
comedi_sv_measure = _comedi.comedi_sv_measure
comedi_get_cmd_src_mask = _comedi.comedi_get_cmd_src_mask
comedi_get_cmd_generic_timed = _comedi.comedi_get_cmd_generic_timed
comedi_cancel = _comedi.comedi_cancel
comedi_command = _comedi.comedi_command
comedi_command_test = _comedi.comedi_command_test
comedi_poll = _comedi.comedi_poll
comedi_set_max_buffer_size = _comedi.comedi_set_max_buffer_size
comedi_get_buffer_contents = _comedi.comedi_get_buffer_contents
comedi_mark_buffer_read = _comedi.comedi_mark_buffer_read
comedi_mark_buffer_written = _comedi.comedi_mark_buffer_written
comedi_get_buffer_offset = _comedi.comedi_get_buffer_offset
class comedi_caldac_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_caldac_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_caldac_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["subdevice"] = _comedi.comedi_caldac_t_subdevice_set
    __swig_getmethods__["subdevice"] = _comedi.comedi_caldac_t_subdevice_get
    if _newclass:subdevice = _swig_property(_comedi.comedi_caldac_t_subdevice_get, _comedi.comedi_caldac_t_subdevice_set)
    __swig_setmethods__["channel"] = _comedi.comedi_caldac_t_channel_set
    __swig_getmethods__["channel"] = _comedi.comedi_caldac_t_channel_get
    if _newclass:channel = _swig_property(_comedi.comedi_caldac_t_channel_get, _comedi.comedi_caldac_t_channel_set)
    __swig_setmethods__["value"] = _comedi.comedi_caldac_t_value_set
    __swig_getmethods__["value"] = _comedi.comedi_caldac_t_value_get
    if _newclass:value = _swig_property(_comedi.comedi_caldac_t_value_get, _comedi.comedi_caldac_t_value_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_caldac_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_caldac_t
    __del__ = lambda self : None;
comedi_caldac_t_swigregister = _comedi.comedi_caldac_t_swigregister
comedi_caldac_t_swigregister(comedi_caldac_t)

COMEDI_MAX_NUM_POLYNOMIAL_COEFFICIENTS = _comedi.COMEDI_MAX_NUM_POLYNOMIAL_COEFFICIENTS
class comedi_polynomial_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_polynomial_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_polynomial_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["coefficients"] = _comedi.comedi_polynomial_t_coefficients_set
    __swig_getmethods__["coefficients"] = _comedi.comedi_polynomial_t_coefficients_get
    if _newclass:coefficients = _swig_property(_comedi.comedi_polynomial_t_coefficients_get, _comedi.comedi_polynomial_t_coefficients_set)
    __swig_setmethods__["expansion_origin"] = _comedi.comedi_polynomial_t_expansion_origin_set
    __swig_getmethods__["expansion_origin"] = _comedi.comedi_polynomial_t_expansion_origin_get
    if _newclass:expansion_origin = _swig_property(_comedi.comedi_polynomial_t_expansion_origin_get, _comedi.comedi_polynomial_t_expansion_origin_set)
    __swig_setmethods__["order"] = _comedi.comedi_polynomial_t_order_set
    __swig_getmethods__["order"] = _comedi.comedi_polynomial_t_order_get
    if _newclass:order = _swig_property(_comedi.comedi_polynomial_t_order_get, _comedi.comedi_polynomial_t_order_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_polynomial_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_polynomial_t
    __del__ = lambda self : None;
comedi_polynomial_t_swigregister = _comedi.comedi_polynomial_t_swigregister
comedi_polynomial_t_swigregister(comedi_polynomial_t)

class comedi_softcal_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_softcal_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_softcal_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["to_phys"] = _comedi.comedi_softcal_t_to_phys_set
    __swig_getmethods__["to_phys"] = _comedi.comedi_softcal_t_to_phys_get
    if _newclass:to_phys = _swig_property(_comedi.comedi_softcal_t_to_phys_get, _comedi.comedi_softcal_t_to_phys_set)
    __swig_setmethods__["from_phys"] = _comedi.comedi_softcal_t_from_phys_set
    __swig_getmethods__["from_phys"] = _comedi.comedi_softcal_t_from_phys_get
    if _newclass:from_phys = _swig_property(_comedi.comedi_softcal_t_from_phys_get, _comedi.comedi_softcal_t_from_phys_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_softcal_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_softcal_t
    __del__ = lambda self : None;
comedi_softcal_t_swigregister = _comedi.comedi_softcal_t_swigregister
comedi_softcal_t_swigregister(comedi_softcal_t)

CS_MAX_AREFS_LENGTH = _comedi.CS_MAX_AREFS_LENGTH
class comedi_calibration_setting_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_calibration_setting_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_calibration_setting_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["subdevice"] = _comedi.comedi_calibration_setting_t_subdevice_set
    __swig_getmethods__["subdevice"] = _comedi.comedi_calibration_setting_t_subdevice_get
    if _newclass:subdevice = _swig_property(_comedi.comedi_calibration_setting_t_subdevice_get, _comedi.comedi_calibration_setting_t_subdevice_set)
    __swig_setmethods__["channels"] = _comedi.comedi_calibration_setting_t_channels_set
    __swig_getmethods__["channels"] = _comedi.comedi_calibration_setting_t_channels_get
    if _newclass:channels = _swig_property(_comedi.comedi_calibration_setting_t_channels_get, _comedi.comedi_calibration_setting_t_channels_set)
    __swig_setmethods__["num_channels"] = _comedi.comedi_calibration_setting_t_num_channels_set
    __swig_getmethods__["num_channels"] = _comedi.comedi_calibration_setting_t_num_channels_get
    if _newclass:num_channels = _swig_property(_comedi.comedi_calibration_setting_t_num_channels_get, _comedi.comedi_calibration_setting_t_num_channels_set)
    __swig_setmethods__["ranges"] = _comedi.comedi_calibration_setting_t_ranges_set
    __swig_getmethods__["ranges"] = _comedi.comedi_calibration_setting_t_ranges_get
    if _newclass:ranges = _swig_property(_comedi.comedi_calibration_setting_t_ranges_get, _comedi.comedi_calibration_setting_t_ranges_set)
    __swig_setmethods__["num_ranges"] = _comedi.comedi_calibration_setting_t_num_ranges_set
    __swig_getmethods__["num_ranges"] = _comedi.comedi_calibration_setting_t_num_ranges_get
    if _newclass:num_ranges = _swig_property(_comedi.comedi_calibration_setting_t_num_ranges_get, _comedi.comedi_calibration_setting_t_num_ranges_set)
    __swig_setmethods__["arefs"] = _comedi.comedi_calibration_setting_t_arefs_set
    __swig_getmethods__["arefs"] = _comedi.comedi_calibration_setting_t_arefs_get
    if _newclass:arefs = _swig_property(_comedi.comedi_calibration_setting_t_arefs_get, _comedi.comedi_calibration_setting_t_arefs_set)
    __swig_setmethods__["num_arefs"] = _comedi.comedi_calibration_setting_t_num_arefs_set
    __swig_getmethods__["num_arefs"] = _comedi.comedi_calibration_setting_t_num_arefs_get
    if _newclass:num_arefs = _swig_property(_comedi.comedi_calibration_setting_t_num_arefs_get, _comedi.comedi_calibration_setting_t_num_arefs_set)
    __swig_setmethods__["caldacs"] = _comedi.comedi_calibration_setting_t_caldacs_set
    __swig_getmethods__["caldacs"] = _comedi.comedi_calibration_setting_t_caldacs_get
    if _newclass:caldacs = _swig_property(_comedi.comedi_calibration_setting_t_caldacs_get, _comedi.comedi_calibration_setting_t_caldacs_set)
    __swig_setmethods__["num_caldacs"] = _comedi.comedi_calibration_setting_t_num_caldacs_set
    __swig_getmethods__["num_caldacs"] = _comedi.comedi_calibration_setting_t_num_caldacs_get
    if _newclass:num_caldacs = _swig_property(_comedi.comedi_calibration_setting_t_num_caldacs_get, _comedi.comedi_calibration_setting_t_num_caldacs_set)
    __swig_setmethods__["soft_calibration"] = _comedi.comedi_calibration_setting_t_soft_calibration_set
    __swig_getmethods__["soft_calibration"] = _comedi.comedi_calibration_setting_t_soft_calibration_get
    if _newclass:soft_calibration = _swig_property(_comedi.comedi_calibration_setting_t_soft_calibration_get, _comedi.comedi_calibration_setting_t_soft_calibration_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_calibration_setting_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_calibration_setting_t
    __del__ = lambda self : None;
comedi_calibration_setting_t_swigregister = _comedi.comedi_calibration_setting_t_swigregister
comedi_calibration_setting_t_swigregister(comedi_calibration_setting_t)

class comedi_calibration_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, comedi_calibration_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, comedi_calibration_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["driver_name"] = _comedi.comedi_calibration_t_driver_name_set
    __swig_getmethods__["driver_name"] = _comedi.comedi_calibration_t_driver_name_get
    if _newclass:driver_name = _swig_property(_comedi.comedi_calibration_t_driver_name_get, _comedi.comedi_calibration_t_driver_name_set)
    __swig_setmethods__["board_name"] = _comedi.comedi_calibration_t_board_name_set
    __swig_getmethods__["board_name"] = _comedi.comedi_calibration_t_board_name_get
    if _newclass:board_name = _swig_property(_comedi.comedi_calibration_t_board_name_get, _comedi.comedi_calibration_t_board_name_set)
    __swig_setmethods__["settings"] = _comedi.comedi_calibration_t_settings_set
    __swig_getmethods__["settings"] = _comedi.comedi_calibration_t_settings_get
    if _newclass:settings = _swig_property(_comedi.comedi_calibration_t_settings_get, _comedi.comedi_calibration_t_settings_set)
    __swig_setmethods__["num_settings"] = _comedi.comedi_calibration_t_num_settings_set
    __swig_getmethods__["num_settings"] = _comedi.comedi_calibration_t_num_settings_get
    if _newclass:num_settings = _swig_property(_comedi.comedi_calibration_t_num_settings_get, _comedi.comedi_calibration_t_num_settings_set)
    def __init__(self, *args): 
        this = _comedi.new_comedi_calibration_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _comedi.delete_comedi_calibration_t
    __del__ = lambda self : None;
comedi_calibration_t_swigregister = _comedi.comedi_calibration_t_swigregister
comedi_calibration_t_swigregister(comedi_calibration_t)

comedi_parse_calibration_file = _comedi.comedi_parse_calibration_file
comedi_apply_parsed_calibration = _comedi.comedi_apply_parsed_calibration
comedi_get_default_calibration_path = _comedi.comedi_get_default_calibration_path
comedi_cleanup_calibration = _comedi.comedi_cleanup_calibration
comedi_apply_calibration = _comedi.comedi_apply_calibration
COMEDI_TO_PHYSICAL = _comedi.COMEDI_TO_PHYSICAL
COMEDI_FROM_PHYSICAL = _comedi.COMEDI_FROM_PHYSICAL
comedi_get_softcal_converter = _comedi.comedi_get_softcal_converter
comedi_get_hardcal_converter = _comedi.comedi_get_hardcal_converter
comedi_to_physical = _comedi.comedi_to_physical
comedi_from_physical = _comedi.comedi_from_physical


